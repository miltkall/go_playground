services:
  restate_dev:
    image: docker.restate.dev/restatedev/restate:1.3
    container_name: restate_dev
    ports:
      - "8080:8080" # for calling endpoints
      - "9070:9070" # http://localhost:9070/ui/overview
      - "9071:9071" # restate communication
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - restate-network

  postgres:
    image: postgres:17.2-alpine
    container_name: postgres
    ports:
      - "5433:5433"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --port 5433 --username postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    command: -p 5433 # change default port
    restart: unless-stopped
    networks:
      - restate-network

  pgadmin: # for inspection
    image: dpage/pgadmin4:9.0.0
    container_name: pgadmin
    ports:
      - "8082:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - restate-network

  apg-etl-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: apg-etl-service
    environment:
      - DB_HOST=postgres
      - DB_PORT=5433
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
    ports:
      - "9080:9080"
    depends_on:
      postgres:
        condition: service_healthy
      restate_dev:
        condition: service_started
    networks:
      - restate-network
    develop:
      watch:
        # Hot reload source code changes
        - action: sync
          path: ./
          target: /app
          ignore:
            - ./.venv/
            - "**/__pycache__"
            - "**/*.pyc"
        # Rebuild on dependency changes
        - action: rebuild
          path: ./pyproject.toml
        - action: rebuild
          path: ./uv.lock
        - action: rebuild
          path: ./Dockerfile
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:9080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

networks:
  restate-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
